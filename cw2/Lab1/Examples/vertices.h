//
// vertices for a flat shaded tetrahedron
// modify colours to show per vertex shading.
//


struct Vertex {
    GLdouble position[3];
    GLfloat color[3];
    };

const struct Vertex tetrahedron[4] = {
        {{  1.0,  1.0,  1.0  }, {  1.0f,  1.0f,  1.0f  }},
        {{ -1.0, -1.0,  1.0  }, {  1.0f,  0.0f,  0.0f  }},
        {{ -1.0,  1.0, -1.0  }, {  0.0f,  0.0f,  1.0f  }},
        {{  1.0, -1.0, -1.0  }, {  0.0f,  1.0f,  0.0f  }},
    };
    
    
//
// vertices, normals and colours for a cube, 8 of each.
//

GLfloat vertices[][3] = {{-1.0,-1.0,-1.0},{1.0,-1.0,-1.0},
	{1.0,1.0,-1.0}, {-1.0,1.0,-1.0}, {-1.0,-1.0,1.0}, 
	{1.0,-1.0,1.0}, {1.0,1.0,1.0}, {-1.0,1.0,1.0}};

GLfloat normals[][3] = {{-1.0,-1.0,-1.0},{1.0,-1.0,-1.0},
	{1.0,1.0,-1.0}, {-1.0,1.0,-1.0}, {-1.0,-1.0,1.0}, 
	{1.0,-1.0,1.0}, {1.0,1.0,1.0}, {-1.0,1.0,1.0}};

GLfloat colors[][3] = {{0.0,0.0,0.0},{1.0,0.0,0.0},
	{1.0,1.0,0.0}, {0.0,1.0,0.0}, {0.0,0.0,1.0}, 
	{1.0,0.0,1.0}, {1.0,1.0,1.0}, {0.0,1.0,1.0}};


    
